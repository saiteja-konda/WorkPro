{"version":3,"sources":["utills/secureRoutes.jsx","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.jsx","reducers/securityReducer.js","reducers/index.js","actions/types.js","store.js","urlConfig.js","utills/setJWTToken.js","actions/securityActions.js","components/Layout/header.jsx","components/userManagment/register.jsx","components/userManagment/login.jsx","components/index.jsx","actions/projectActions.js","components/project/projectItem.jsx","components/project/createProjectButton.jsx","components/project/dashBoard.jsx","components/project/updateProject.jsx","components/project/addProject.jsx","components/commons/backToDashBoardButton.jsx","components/projectBoard/projectTask/projectTask.jsx","actions/backlogActions.js","components/projectBoard/backlog.jsx","components/projectBoard/projectBoard.jsx","components/projectBoard/projectTask/addProjectTask.jsx","components/projectBoard/projectTask/updateProjectTask.jsx","components/userManagment/user.jsx","App.js","index.js"],"names":["connect","state","security","Component","component","otherProps","render","props","validToken","to","initialState","projects","project","project_tasks","project_task","user","booleanActionPayload","payload","combineReducers","errors","action","type","filter","projectIdentifier","backlog","projectSequence","initalState","middleware","thunk","Redux","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","PROJECT_API_URL","PROJECT_BACKLOG_API_URL","setJWTToken","token","axios","defaults","headers","common","logout","dispatch","localStorage","removeItem","Header","this","location","href","headerLinks","isUserAuthenticated","className","id","fullName","onClick","bind","style","display","flexWrap","justifyContent","Register","username","password","confirmPassword","onChange","onSubmit","history","push","nextProps","setState","e","preventDefault","newUser","createNewUser","target","name","value","from","opacity","config","delay","duration","autoFocus","classnames","placeholder","userName","border","color","fontSize","a","post","response","data","Login","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","LoginRequest","login","res","setItem","decoded","jwt_decode","Index","flexDirection","DollarOutlined","SlackOutlined","SafetyCertificateOutlined","createProject","ProjectItem","onDeleteClick","deleteProject","projectName","description","confirm","delete","CreateProjectButton","Dashboard","getProjects","board","length","map","key","role","boardAlgorithm","get","UpdateProject","start_date","end_date","match","params","getProject","updateProject","disabled","AddProject","newProject","protoType","PropTypes","func","isRequired","object","BackToDashBoardButton","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","cardbodyBg","priority","div","drag","place","effect","backgroundColor","fontWeight","summary","acceptanceCriteria","marginBottom","data-tip","EditOutlined","DeleteOutlined","dueDate","ClockCircleOutlined","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","ideaItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","AddProjectTask","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","User","propType","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","newestOnTop","transition","Zoom","rtl","pauseOnFocusLoss","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a62da629.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\nconst mapStoreToProps = (state) => ({\n  security: state.security,\n});\nexport default connect(mapStoreToProps)(SecuredRoute);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  project_tasks: [],\n  project_task: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG: {\n      return {\n        ...state,\n        project_tasks: action.payload,\n      };\n    }\n\n    case GET_PROJECT_TASK: {\n      return {\n        ...state,\n        project_task: action.payload,\n      };\n    }\n    case DELETE_PROJECT_TASK: {\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n            project_task => project_task.projectSequence !== action.payload\n        )\n      };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {},\n};\n\nconst booleanActionPayload = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","//Types for PROJECT ACTIONS\n\nexport const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\n//Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\n//Types for SECURITY ACTIONS\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\nconst Redux =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nif (window.navigator.userAgent.includes(\"Chrome\") && Redux) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware), Redux)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","// export const PROJECT_API_URL = \"https://projectboard.cfapps.io/api/project/\";\n// export const PROJECT_BACKLOG_API_URL = \"https://projectboard.cfapps.io/api/backlog/\";\n// export const USER_LOGIN_API_URL = \"https://projectboard.cfapps.io/api/users/login\";\n// export const USER_REGISTER_API_URL = \"https://projectboard.cfapps.io/api/users/register\";\n\nexport const PROJECT_API_URL = \"https://workp.herokuapp.com/api/project/\";\nexport const PROJECT_BACKLOG_API_URL =\n  \"https://workp.herokuapp.com/api/backlog/\";\nexport const USER_LOGIN_API_URL = \"https://workp.herokuapp.com/api/users/login\";\nexport const USER_REGISTER_API_URL =\n  \"https://workp.herokuapp.com/api/users/register\";\n","import axios from \"axios\";\n\nconst setJWTToken = (token) => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { USER_REGISTER_API_URL, USER_LOGIN_API_URL } from \"../urlConfig\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../utills/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(USER_REGISTER_API_URL, newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(USER_LOGIN_API_URL, LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { logout } from \"../../actions/securityActions\";\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n    const isUserAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link font-weight-bold text-warning \"\n              to=\"/dashboard\"\n            >\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link  font-weight-bold text-light mr-1 \"\n              to=\"/user\"\n            >\n              {user.fullName}\n              \n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link  font-weight-bold text-light \"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n    const isUserNotAuthenticated = (\n      <div>\n        \n      </div>\n    );\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = isUserAuthenticated;\n    } else {\n      headerLinks = isUserNotAuthenticated;\n    }\n    return (\n      <div >\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark mb-5\">\n        <div className=\"container\" style={{display:\"flex\", flexWrap:\"wrap\",justifyContent: \"flex-start\"  }}>\n          <Link className=\"navbar-brand\" to=\"/\">\n            <span className=\"font-weight-bold\">Work Pro</span>\n          </Link>\n          {headerLinks}\n        </div>\n      </nav>\n      </div>\n    );\n  }\n}\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\nconst mapStoreToProps = (state) => ({\n  security: state.security,\n});\nexport default connect(mapStoreToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Spring } from \"react-spring/renderprops\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from \"antd\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  //WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 500, duration: 500 }}\n      >\n        {(props) => (\n          <div style={props}>\n            <div className=\"register\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-4 m-auto\">\n                    <h1 className=\"display-5 text-center text-light\">\n                      Sign Up\n                    </h1>\n                    <p className=\"lead text-center text-light\">\n                      Create your Account\n                    </p>\n                    <form onSubmit={this.onSubmit}>\n                      <div className=\"form-group\">\n                        <input\n                          autoFocus\n                          type=\"text\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.fullName,\n                            }\n                          )}\n                          placeholder=\"Full Name\"\n                          name=\"fullName\"\n                          value={this.state.fullName}\n                          onChange={this.onChange}\n                        />\n                        {errors.fullName && (\n                          <div className=\"feedback\">{errors.fullName}</div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"text\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.username,\n                            }\n                          )}\n                          placeholder=\"Email Address (Username)\"\n                          name=\"username\"\n                          value={this.state.userName}\n                          onChange={this.onChange}\n                        />\n                        {errors.username && (\n                          <div className=\"feedback\">{errors.username}</div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"password\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.password,\n                            }\n                          )}\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          value={this.state.password}\n                          onChange={this.onChange}\n                        />\n                        {errors.password && (\n                          <div className=\"feedback\">{errors.password}</div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"password\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.confirmPassword,\n                            }\n                          )}\n                          placeholder=\"Confirm Password\"\n                          name=\"confirmPassword\"\n                          value={this.state.confirmPassword}\n                          onChange={this.onChange}\n                        />\n                        {errors.confirmPassword && (\n                          <div className=\"feedback\">\n                            {errors.confirmPassword}\n                          </div>\n                        )}\n                      </div>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-dark btn-block mt-4\"\n                      >\n                        Register\n                      </button>\n                      <span className=\"text-light text-center\">\n                        <Link to=\"/login\">\n                          <Button\n                            className=\"btn\"\n                            style={{\n                              border: \"none\",\n                              color: \"white\",\n                              fontSize: \"12px\",\n                              justifyContent: \"center\",\n                            }}\n                          >\n                            Already Registered? Click here to login\n                          </Button>\n                        </Link>\n                      </span>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/securityActions\";\nimport { PropTypes } from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Spring } from \"react-spring/renderprops\";\nimport { toast } from \"react-toastify\";\nimport { Link } from 'react-router-dom';\nimport { Button } from 'antd';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  //WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n\n      toast(` Welcome ${nextProps.security.user.fullName}`, {\n        className: \"dark\",\n        position: \"bottom-center\",\n        autoClose: 2000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    this.props.login(LoginRequest);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 500, duration: 500 }}\n      >\n        {(props) => (\n          <div style={props}>\n            <div className=\"login\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-4 m-auto\">\n                    <h1 className=\"display-5 mb-5 mt-5 text-white text-center\">Log In</h1>\n                    <form onSubmit={this.onSubmit}>\n                      <div className=\"form-group\">\n                        <input\n                          autoFocus\n                          type=\"text\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.username,\n                            }\n                          )}\n                          placeholder=\"Email Address\"\n                          name=\"username\"\n                          value={this.state.username}\n                          onChange={this.onChange}\n                        />\n                        {errors.username && (\n                          <div className=\"feedback\">\n                            {errors.username}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"password\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.password,\n                            }\n                          )}\n                          placeholder=\"Password\"\n                          name=\"password\"\n                          value={this.state.password}\n                          onChange={this.onChange}\n                        />\n                        {errors.password && (\n                          <div className=\"feedback\">\n                            {errors.password}\n                          </div>\n                        )}\n                      </div>\n                      <button\n                        type=\"submit\"\n                        placeholder=\"\"\n                        className=\"btn btn-dark btn-block mt-4\"\n                        onSubmit={this.onSubmit}\n                      >\n                        Login\n                      </button>\n                      <span className=\"text-light text-center\">\n                          <Link to=\"/register\">\n                            <Button\n                              className=\"btn\"\n                              style={{\n                                border: \"none\",\n                                color: \"white\",\n                                fontSize: \"12px\",\n                                justifyContent: \"center\",\n                              }}\n                            >\n                             \n                              Not Registered?\n                               Click here to Register\n                            </Button>\n                          </Link>\n                        </span>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\nconst mapStoreToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\nexport default connect(mapStoreToProps, { login })(Login);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Spring } from \"react-spring/renderprops\";\nimport { PropTypes } from \"prop-types\";\nimport { DollarOutlined, SafetyCertificateOutlined, SlackOutlined } from \"@ant-design/icons\";\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 500, duration: 500 }}\n      >\n        {(props) => (\n          <div style={props}>\n            <div className=\"landing\">\n              <div className=\"light-overlay landing-inner text-white\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-12\">\n                      <h1 className=\"display-4\">Work Pro</h1>\n                      <hr className=\"style11\" />\n                      <p className=\"lead\">\n                      Using Work pro you can visually depict works of your\n                      project at various stages of a process using cards to\n                      represent project tasks and with columns to represent\n                      each stage of the process. Cards are moved from left to\n                      right to show progress and to help be more productive\n                      and work like a pro\n                      </p>\n                      <hr className=\"style11\" />\n                      <div\n                      style={{\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"space-around\",\n                      }}\n                      className=\"container\"\n                      >\n                      <div>\n                      <DollarOutlined className=\"display-4 mb-2\" />\n                      <h3>Free</h3>\n                      <p>\n                      Its absloutly free application you can create\n                      unlimited projects and assign unlimted tasks to your\n                      project\n                      </p>\n                      </div>\n                      <div>\n                      <SlackOutlined className=\"display-4 mb-2\" />\n                      <h3>Simple</h3>\n                      <p>\n                      Work Pro is simple and confusion free crafted with\n                      care to deliver beautyful user experiece,its all\n                      about you and your own projects\n                      </p>\n                      </div>\n                      <div>\n                      <SafetyCertificateOutlined className=\"display-4 mb-2\" />\n                      <h3>Safe</h3>\n                      <p>\n                      We never share your content, your password and all\n                      your data is encrypted using 128-Bit Blowfish\n                      encryption algorithm\n                      </p>\n                      </div>\n                      </div>\n                      <hr className=\"style11\" />\n                      <p className=\"justify-conent-left\">\n                        Login to track your project and their tasks, Not a\n                        member yet Join the Work pro and become pro\n                      </p>\n                      <div className=\"text-center\">\n                      <Link\n                      to=\"/register\"\n                      className=\"btn btn-lg btn-dark mr-2\"\n                      >\n                      Sign Up\n                        </Link>\n                        <Link to=\"/login\" className=\"btn btn-lg btn-light mr-2\">\n                          Login\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\nIndex.propTypes = {\n  security: PropTypes.object.isRequired,\n};\nconst mapStoreToProp = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStoreToProp)(Index);\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\nimport { PROJECT_API_URL } from \"../urlConfig\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(PROJECT_API_URL, project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(PROJECT_API_URL);\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${PROJECT_API_URL}${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure that you want to delete project? this action is irreverseble \"\n    )\n  ) {\n    await axios.delete(`${PROJECT_API_URL}${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            {/*         <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n    </div>*/}\n            <div className=\"col-lg-10 col-md-4 col-8\">\n              <h4>{project.projectName}</h4>\n              <p>{project.description}</p>\n            </div>\n            <div className=\"col-md-2 \">\n              <ul className=\"list-group\">\n              <Link to={`/projectBoard/${project.projectIdentifier}`}>\n              <li className=\"list-group-item bg-dark mb-1 text-center text-light font-weight-bold board\">\n                    Open\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item bg-dark mb-1 text-center text-light font-weight-bold update\">\n                    Edit\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item bg-danger mb-1 text-center text-light font-weight-bold delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  Delete\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {Spring} from 'react-spring/renderprops'\n\nconst CreateProjectButton = () => {\n  return (\n    <Spring\n      from={{ opacity: 0 }}\n      to={{ opacity: 1 }}\n      config={{ delay: 1000, duration: 1000 }}\n    >\n      {(props) => (\n        <Link style={props} to=\"/addProject\" className=\"btn btn-sm btn-light\">\n          + New Project\n        </Link>\n      )}\n    </Spring>\n  );\n};\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"../project/projectItem\";\nimport CreateProjectButton from \"../project/createProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { Spring } from \"react-spring/renderprops\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    let board;\n    const boardAlgorithm = (projects) => {\n      if (projects.length !== 0) {\n        return (\n          <div>\n            {projects.map((project) => (\n              <ProjectItem key={project.id} project={project} />\n            ))}\n          </div>\n        );\n      } else  {\n        return (\n          <Spring\n            from={{ opacity: 0 }}\n            to={{ opacity: 1 }}\n            config={{ delay: 500, duration: 500 }}\n          >\n            {(props) => (\n              <div style={props}>\n                <div className=\"alert alert-info text-center\" role=\"alert\">\n                  Oops! your Dashboard is Empty, Click on + to create project\n                </div>\n              </div>\n            )}\n          </Spring>\n        );\n      }\n    \n    };\n    board = boardAlgorithm(projects);\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 500, duration: 500 }}\n      >\n        {(props) => (\n          <div style={props}>\n            <div className=\"projects\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <h1 className=\"h3 text-center text-white\">Your Projects</h1>\n                    <br />\n                    <CreateProjectButton />\n                    <br />\n                    <hr className=\"style11\" />\n                    {board}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Spring } from \"react-spring/renderprops\";\nimport { Link } from \"react-router-dom\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \" \",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n  onChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit(e) {\n    e.preventDefault();\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(updateProject, this.props.history);\n  }\n  render() {\n    const { errors } = this.state;\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 500, duration: 500 }}\n      >\n        {(props) => (\n          <div style={props}>\n            <div className=\"project\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-6 m-auto\">\n                    <h5 className=\"display-5 text-center text-white\">\n                      Edit Project\n                    </h5>\n                    <hr className=\"style11\" />\n                    <form onSubmit={this.onSubmit}>\n                      <div className=\"form-group\">\n                        <label className=\"text-light\">Project Name</label>\n                        <input\n                          autoFocus\n                          type=\"text\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.projectName,\n                            }\n                          )}\n                          placeholder=\"Project Name\"\n                          name=\"projectName\"\n                          value={this.state.projectName}\n                          onChange={this.onChange}\n                        />\n                        {errors.projectName && (\n                          <div className=\"feedback\">\n                            {errors.projectName}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"text\"\n                          className=\"form-control form-control-lg\"\n                          placeholder=\"Unique Project ID\"\n                          disabled\n                          name=\"projectIdentifier\"\n                          value={this.state.projectIdentifier}\n                          onChange={this.onChange}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <label className=\"text-light\">Description</label>\n\n                        <textarea\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.description,\n                            }\n                          )}\n                          placeholder=\"Description about your Project\"\n                          name=\"description\"\n                          value={this.state.description}\n                          onChange={this.onChange}\n                        />\n                        {errors.description && (\n                          <div className=\"feedback\">\n                            {errors.description}\n                          </div>\n                        )}\n                      </div>\n                      <label className=\"text-light\">Start Date</label>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"date\"\n                          className=\"form-control form-control-lg\"\n                          name=\"start_date\"\n                          value={this.state.start_date}\n                          onChange={this.onChange}\n                        />\n                      </div>\n                      <label className=\"text-light\">Estimated End Date</label>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"date\"\n                          className=\"form-control form-control-lg\"\n                          name=\"end_date\"\n                          value={this.state.end_date}\n                          onChange={this.onChange}\n                        />\n                      </div>\n                      <input type=\"submit\" className=\"btn btn-dark mr-2 mt-4\" />\n                      <Link to={`/dashboard`}>\n                        <button className=\"btn btn-light mt-4\" >Cancel</button>\n                      </Link>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProp = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\nexport default connect(mapStateToProp, { getProject, createProject })(\n  UpdateProject\n);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\nimport { Spring } from \"react-spring/renderprops\";\nimport { Link } from \"react-router-dom\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  //WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 500, duration: 500 }}\n      >\n        {(props) => (\n          <div style={props}>\n            <div>\n              <div className=\"project\">\n                <div className=\"container\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6 m-auto\">\n                      <h5 className=\"display-5 text-center text-white\">\n                        Create Project\n                      </h5>\n                      <hr className=\"style11\" />\n                      <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                          <label className=\"text-light\">Project Name</label>\n\n                          <input\n                            autoFocus\n                            type=\"text\"\n                            className={classnames(\n                              \"form-control form-control-lg\",\n                              {\n                                \"is-invalid\": errors.projectName,\n                              }\n                            )}\n                            placeholder=\"Full Stack Application\"\n                            name=\"projectName\"\n                            value={this.state.projectName}\n                            onChange={this.onChange}\n                          />\n                          {errors.projectName && (\n                            <div className=\"feedback\">\n                              {errors.projectName}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"text-light\"> Project ID</label>\n\n                          <input\n                            type=\"text\"\n                            className={classnames(\n                              \"form-control form-control-lg\",\n                              {\n                                \"is-invalid\": errors.projectIdentifier,\n                              }\n                            )}\n                            placeholder=\"Unique Project ID 4 or 5 characters\"\n                            name=\"projectIdentifier\"\n                            value={this.state.projectIdentifier}\n                            onChange={this.onChange}\n                          />\n                          {errors.projectIdentifier && (\n                            <div className=\"feedback\">\n                              {errors.projectIdentifier}\n                            </div>\n                          )}\n                        </div>\n                        <div className=\"form-group\">\n                          <label className=\"text-light\">\n                            Project Description\n                          </label>\n\n                          <textarea\n                            className={classnames(\n                              \"form-control form-control-lg\",\n                              {\n                                \"is-invalid\": errors.description,\n                              }\n                            )}\n                            placeholder=\"Full-stack application with React, Redux and Spring Boot( JWT Authentication)\"\n                            name=\"description\"\n                            value={this.state.description}\n                            onChange={this.onChange}\n                          />\n                          {errors.description && (\n                            <div className=\"feedback\">\n                              {errors.description}\n                            </div>\n                          )}\n                        </div>\n                        <label className=\"text-light\">Start Date</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"date\"\n                            className=\"form-control form-control-lg\"\n                            name=\"start_date\"\n                            value={this.state.start_date}\n                            onChange={this.onChange}\n                          />\n                        </div>\n                        <label className=\"text-light\">End Date</label>\n                        <div className=\"form-group\">\n                          <input\n                            type=\"date\"\n                            className=\"form-control form-control-lg\"\n                            name=\"end_date\"\n                            value={this.state.end_date}\n                            onChange={this.onChange}\n                          />\n                        </div>\n\n                        <input\n                          type=\"submit\"\n                          className=\"btn btn-dark mr-2 mt-4 mb-5\"\n                        />\n                        <Link to='/dashboard'>\n                        <button className=\"btn btn-light  mt-4 mb-5\">\n                          cancel\n                        </button>\n                        </Link>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\n\nAddProject.protoType = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToPops = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToPops, { createProject })(AddProject);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Spring } from \"react-spring/renderprops\";\n\nconst BackToDashBoardButton = () => {\n  return (\n    <Spring from={{ opacity: 0 }} to={{ opacity: 1 }}\n    config={{ delay: 1000, duration: 1000 }}\n    >\n      {(props) => (\n        \n          <Link style={props} to=\"/dashboard\">\n            <button className=\"btn btn-sm btn-light ml-2\">\n              {\"< \"}Back to Dashboard\n            </button>\n          </Link>\n       \n      )}\n    </Spring>\n  );\n};\n\nexport default BackToDashBoardButton;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactTooltip from \"react-tooltip\";\nimport { motion } from \"framer-motion\";\n\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  ClockCircleOutlined,\n} from \"@ant-design/icons\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n    let cardbodyBg;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"text-light\";\n      priorityString = \"HIGH\";\n      cardbodyBg = \"#fcb1b1\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \" text-light\";\n      priorityString = \"MEDIUM\";\n      cardbodyBg = \"#f0f696\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \" text-light\";\n      priorityString = \"LOW\";\n      cardbodyBg = \"#96f7d2\";\n    }\n\n    if(project_task.priority === 4){\n\n      priorityClass = \" text-light\";\n      priorityString = \"IDEA\";\n      cardbodyBg = \"#49beb7\";\n    }\n\n    return (\n      <motion.div drag=\"y\" className=\"card mb-2 \">\n        <ReactTooltip place=\"bottom\" type=\"dark\" effect=\"float\" />\n        <div\n          className={`card-header text-dark text-lowercase ${priorityClass}`}\n        >\n          {project_task.projectSequence} Priority: {priorityString}\n        </div>\n\n        <div style={{ backgroundColor: `${cardbodyBg}` }}>\n          <div className=\"card-body\">\n            <p\n              className=\"card-title\"\n              style={{ fontSize: \"16px\", fontWeight: \"bold\" }}\n            >\n              {project_task.summary}\n            </p>\n            <p\n              className=\"card-text text-lowercase mb-2\"\n              style={{ fontSize: \"12px\", fontWeight: \"lighter\" }}\n            >\n              {project_task.acceptanceCriteria}\n            </p>\n          </div>\n\n          {\n            // buttons\n          }\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"space-around\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <Link\n              data-tip=\"update\"\n              to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\n              className=\"btn btn-sm\"\n            >\n              <EditOutlined />\n            </Link>\n\n            <button\n              className=\"btn btn-sm \"\n              data-tip=\"Delete\"\n              onClick={this.onDeleteClick.bind(\n                this,\n                project_task.projectIdentifier,\n                project_task.projectSequence\n              )}\n            >\n              <DeleteOutlined />\n            </button>\n            <button\n              className=\"btn btn-sm\"\n              data-tip={` Due date ${project_task.dueDate}`}\n            >\n              <ClockCircleOutlined />\n            </button>\n          </div>\n        </div>\n      </motion.div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import axios from \"axios\";\nimport {\n  GET_ERRORS,\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"./types\";\nimport { PROJECT_BACKLOG_API_URL } from \"../urlConfig\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`${PROJECT_BACKLOG_API_URL}${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`${PROJECT_BACKLOG_API_URL}${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(\n      `${PROJECT_BACKLOG_API_URL}${backlog_id}/${pt_id}`\n    );\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n    // dispatch({\n    //   type: GET_ERRORS,\n    //   payload: err.response.data,\n    // });\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(\n      `${PROJECT_BACKLOG_API_URL}${backlog_id}/${pt_id}`,\n      project_task\n    );\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`${PROJECT_BACKLOG_API_URL}${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./projectTask/projectTask\";\nimport { Spring } from \"react-spring/renderprops\";\nimport { motion } from \"framer-motion\";\nclass Backlog extends Component {\n  state = {};\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map((project_task) => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n    let ideaItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n      if (tasks[i].props.project_task.status === \"IDEA\") {\n        ideaItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          {\n            //\n          }\n\n          <motion.div drag=\"x\" className=\"col-md-3\">\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              config={{ delay: 500, duration: 500 }}\n            >\n              {(props) => (\n                <div style={props}>\n                  <div\n                    style={{ backgroundColor: \"#bfdcae\" }}\n                    className=\"card text-white mb-2\"\n                  >\n                    <div className=\"card-header\">\n                      <h5 className=\"card-title text-capitalize\">To-Do list</h5>\n                    </div>\n                  </div>\n                  {todoItems}\n                </div>\n              )}\n            </Spring>\n          </motion.div>\n          {\n            //\n          }\n\n          <motion.div drag=\"x\" className=\"col-md-3 \">\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              config={{ delay: 1000, duration: 1000 }}\n            >\n              {(props) => (\n                <div style={props}>\n                  <div\n                    style={{ backgroundColor: \"#81b214\" }}\n                    className=\"card text-white mb-2\"\n                  >\n                    <div className=\"card-header\">\n                      <h5 className=\"card-title text-capitalize\">In Process</h5>\n                    </div>\n                  </div>\n                  {inProgressItems}\n                </div>\n              )}\n            </Spring>\n          </motion.div>\n          {\n            //\n          }\n          <motion.div drag=\"x\" className=\"col-md-3\">\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              config={{ delay: 1500, duration: 1500 }}\n            >\n              {(props) => (\n                <div style={props}>\n                  <div\n                    style={{ backgroundColor: \"#206a5d\" }}\n                    className=\"card text-white mb-2\"\n                  >\n                    <div className=\"card-header\">\n                      <h5 className=\"card-title text-capitalize\">Done</h5>\n                    </div>\n                  </div>\n                  {doneItems}\n                </div>\n              )}\n            </Spring>\n          </motion.div>\n          {\n            //\n          }\n          <motion.div drag=\"x\" className=\"col-md-3\">\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              config={{ delay: 1500, duration: 1500 }}\n            >\n              {(props) => (\n                <div style={props}>\n                  <div\n                    style={{ backgroundColor: \"#ff8364\" }}\n                    className=\"card text-white mb-2\"\n                  >\n                    <div className=\"card-header\">\n                      <h5 className=\"card-title text-capitalize\">Ideas</h5>\n                    </div>\n                  </div>\n                  {ideaItems}\n                </div>\n              )}\n            </Spring>\n          </motion.div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BackToDashBoardButton from \"../commons/backToDashBoardButton\";\nimport Backlog from \"./backlog\";\nimport { getBacklog } from \"../../actions/backlogActions\";\nimport { PropTypes } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Spring } from \"react-spring/renderprops\";\n\nclass ProjectBoard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errors: {},\n    };\n  }\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              config={{ delay: 500, duration: 500 }}\n            >\n              {(props) => (\n                <div style={props}>\n                  <div className=\"alert alert-danger text-center\" role=\"alert\">\n                    {errors.projectNotFound}\n                  </div>\n                </div>\n              )}\n            </Spring>\n          );\n        } else {\n          return (\n            <Spring\n              from={{ opacity: 0 }}\n              to={{ opacity: 1 }}\n              config={{ delay: 500, duration: 500 }}\n            >\n              {(props) => (\n                <div style={props}>\n                  <div className=\"alert alert-info text-center\" role=\"alert\">\n                    No project tasks are on this board\n                  </div>\n                </div>\n              )}\n            </Spring>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n    BoardContent = boardAlgorithm(errors, project_tasks);\n    return (\n      <div className=\"container\">\n        <Spring from={{ opacity: 0 }} to={{ opacity: 1 }}>\n          {(props) => (\n            <Link\n              style={props}\n              to={`/addProjectTask/${id}`}\n              className=\"btn btn-sm btn-light\"\n            >\n              + New Project Task\n            </Link>\n          )}\n        </Spring>\n\n        <BackToDashBoardButton />\n        <br />\n        <hr className=\"style11\" />\n        {BoardContent}\n      </div>\n    );\n  }\n}\nProjectBoard.protoType = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { Spring } from \"react-spring/renderprops\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n  //WARNING! To be deprecated in React v17. Use new lifecycle static getDerivedStateFromProps instead.\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 500, duration: 500 }}\n      >\n        {(props) => (\n          <div style={props}>\n            <div className=\"add-PBI\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-6 m-auto\">\n                    <h4 className=\"display-5 text-center text-white \">\n                      Add Project Task\n                    </h4>\n                    <p className=\" text-center text-white  h6\">\n                      Project name\n                      <span className=\"text-white h6\">{`   :${this.state.projectIdentifier}`}</span>\n                    </p>\n                    <form onSubmit={this.onSubmit}>\n                      <div className=\"form-group\">\n                        <input\n                          autoFocus\n                          type=\"text\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.summary,\n                            }\n                          )}\n                          name=\"summary\"\n                          placeholder=\"Project Task summary\"\n                          value={this.state.summary}\n                          onChange={this.onChange}\n                        />\n                        {errors.summary && (\n                          <div className=\"feedback\">\n                            {errors.summary}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <textarea\n                          className=\"form-control form-control-lg\"\n                          placeholder=\"Acceptance Criteria\"\n                          name=\"acceptanceCriteria\"\n                          value={this.state.acceptanceCriteria}\n                          onChange={this.onChange}\n                        ></textarea>\n                      </div>\n                      <h6>Due Date</h6>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"date\"\n                          className=\"form-control form-control-lg\"\n                          name=\"dueDate\"\n                          value={this.state.dueDate}\n                          onChange={this.onChange}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <select\n                          className=\"form-control form-control-lg\"\n                          name=\"priority\"\n                          value={this.state.priority}\n                          onChange={this.onChange}\n                        >\n                          <option value={0}>Select Priority</option>\n                          <option value={1}>High</option>\n                          <option value={2}>Medium</option>\n                          <option value={3}>Low</option>\n                          <option value={4}>Idea</option>\n                        </select>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <select\n                          className=\"form-control form-control-lg\"\n                          name=\"status\"\n                          value={this.state.status}\n                          onChange={this.onChange}\n                        >\n                          <option value=\"\">Select Status</option>\n                          <option value=\"TO_DO\">To Do</option>\n                          <option value=\"IN_PROGRESS\">In Progress</option>\n                          <option value=\"DONE\">Done</option>\n                          <option value=\"IDEA\">Idea</option>\n                        </select>\n                      </div>\n\n                      <input\n                        type=\"submit\"\n                        className=\"btn btn-dark mr-2 mt-4 mb-5\"\n                      />\n\n                      <Link to={`/projectBoard/${id}`}>\n                        <button className=\"btn btn-light  mt-4 mb-5\">\n                          Cancel\n                        </button>\n                      </Link>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport { PropTypes } from \"prop-types\";\nimport classnames from \"classnames\";\nimport { Spring } from \"react-spring/renderprops\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At,\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <Spring from={{ opacity: 0 }} to={{ opacity: 1 }}>\n        {(props) => (\n          <div style={props}>\n            <div className=\"add-PBI\">\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-6 m-auto\">\n                    <h4 className=\"display-5 text-center text-white\">\n                      Update Project Task\n                    </h4>\n                    <p className=\"lead text-center text-white\">\n                      Project Name: {this.state.projectIdentifier} | Project\n                      Task ID: {this.state.projectSequence}{\" \"}\n                    </p>\n                    <form onSubmit={this.onSubmit}>\n                      <div className=\"form-group\">\n                        <input\n                          autoFocus\n                          type=\"text\"\n                          className={classnames(\n                            \"form-control form-control-lg\",\n                            {\n                              \"is-invalid\": errors.summary,\n                            }\n                          )}\n                          name=\"summary\"\n                          placeholder=\"Project Task summary\"\n                          value={this.state.summary}\n                          onChange={this.onChange}\n                        />\n                        {errors.summary && (\n                          <div className=\"invalid-feedback\">\n                            {errors.summary}\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"form-group\">\n                        <textarea\n                          className=\"form-control form-control-lg\"\n                          placeholder=\"Acceptance Criteria\"\n                          name=\"acceptanceCriteria\"\n                          value={this.state.acceptanceCriteria}\n                          onChange={this.onChange}\n                        />\n                      </div>\n                      <h6>Due Date</h6>\n                      <div className=\"form-group\">\n                        <input\n                          type=\"date\"\n                          className=\"form-control form-control-lg\"\n                          name=\"dueDate\"\n                          value={this.state.dueDate}\n                          onChange={this.onChange}\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <select\n                          className=\"form-control form-control-lg\"\n                          name=\"priority\"\n                          value={this.state.priority}\n                          onChange={this.onChange}\n                        >\n                          <option value={0}>Select Priority</option>\n                          <option value={1}>High</option>\n                          <option value={2}>Medium</option>\n                          <option value={3}>Low</option>\n                        </select>\n                      </div>\n\n                      <div className=\"form-group\">\n                        <select\n                          className=\"form-control form-control-lg\"\n                          name=\"status\"\n                          value={this.state.status}\n                          onChange={this.onChange}\n                        >\n                          <option value=\"\">Select Status</option>\n                          <option value=\"TO_DO\">To Do</option>\n                          <option value=\"IN_PROGRESS\">In Progress</option>\n                          <option value=\"DONE\">Done</option>\n                        </select>\n                      </div>\n\n                      <input type=\"submit\" className=\"btn btn-dark mt-4 mr-2\" />\n                      <Link\n                        to={`/projectBoard/${this.state.projectIdentifier}`}\n                      >\n                        <button type=\"cancel\" className=\"btn btn-light mt-4\" >Cancel</button>\n                      </Link>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PropTypes } from \"prop-types\";\nimport { Spring } from \"react-spring/renderprops\";\n\nclass User extends Component {\n  state = {};\n  render() {\n    const { user } = this.props.security;\n    return (\n      <Spring\n        from={{ opacity: 0 }}\n        to={{ opacity: 1 }}\n        config={{ delay: 500, duration: 500 }}\n      >\n        {(props) => (\n          <div style={props}>\n            <div className=\"container userdetails\">\n              <h4>Your details</h4>\n              <h4>Full Name: {user.fullName}</h4>\n              <h4>Emai address: {user.username}</h4>\n              {/*<h5>Your encrypted password is : {user.password}</h5>*/}\n            </div>\n          </div>\n        )}\n      </Spring>\n    );\n  }\n}\nUser.propType = {\n  security: PropTypes.object.isRequired,\n};\nconst mapStoreToProps = (state) => ({\n  security: state.security,\n});\nexport default connect(mapStoreToProps)(User);\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Zoom } from \"react-toastify\";\nimport SecuredRoute from \"./utills/secureRoutes\";\nimport store from \"./store\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Header from \"./components/Layout/header\";\n// import Footer from \"./components/Layout/footer\";\nimport Register from \"./components/userManagment/register\";\nimport Login from \"./components/userManagment/login\";\nimport jwt_decode from \"jwt-decode\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport Index from \"./components/index\";\nimport Dashboard from \"./components/project/dashBoard\";\nimport UpdateProject from \"./components/project/updateProject\";\nimport AddProject from \"./components/project/addProject\";\nimport ProjectBoard from \"./components/projectBoard/projectBoard\";\nimport AddProjectTask from \"./components/projectBoard/projectTask/addProjectTask\";\nimport UpdateProjectTask from \"./components/projectBoard/projectTask/updateProjectTask\";\nimport setJWTToken from \"./utills/setJWTToken\";\nimport { logout } from \"./actions/securityActions\";\nimport User from \"./components/userManagment/user\";\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <ToastContainer\n            position=\"bottom-right\"\n            autoClose={2000}\n            hideProgressBar={true}\n            newestOnTop={false}\n            closeOnClick\n            transition={Zoom}\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            \n          />\n          {/*public Routes*/}\n          <Route exact path=\"/\" component={Index} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n          {/*private Routes*/}\n          <Switch>\n            <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n            <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n            <SecuredRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecuredRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecuredRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecuredRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n            <SecuredRoute exact path=\"/user\" component={User} />\n          </Switch>\n          {/*<Footer />*/}\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}